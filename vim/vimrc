"
" ~/.vimrc
"

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
	finish
endif

"==============================================================================
" Edit settings
"==============================================================================
set nobackup				" do not keep a backup file, use versions instead
set hlsearch				" highlight the last used search pattern
set undofile	        	" keep an undo file (undo changes after closing)
set nocompatible			" no backwards-compatible vi mode
set background=dark			" use dark background
set mouse=a					" always enables mouse
set number					" display line number on the left
set ruler					" display cursor position
set wildmenu				" better command line completion
set wildmode=longest,list		" better unix-like tab completion
set backspace=indent,eol,start	" allow backspacing over autoindent, line breaks and start of insert action
set ignorecase				" use case insensitive search
set smartcase				" except using capital letters
set shiftwidth=4			" affects >>, <<, ==
set softtabstop=4			" when pressing <BS>, delete 4 spaces
set tabstop=4				" change tab width to 4 spaces
set smartindent				" indent according to filetype
set autoindent				" auto indent on new lines
set nostartofline			" vertical movement preserves horizontal position
set wrap					" visually wrap lines
set linebreak				" wraps at linebreak
set showcmd					" show command as they are typed in
set clipboard=unnamedplus	" clipboard support

"==============================================================================
" FileType
"==============================================================================
" Enable filetype detection and syntax highlighting
syntax on
filetype on
filetype indent on
filetype plugin on

" FileType specific definitions
autocmd BufNewFile,BufRead *.md setlocal filetype=markdown
autocmd BufNewFile,BufRead *.S setlocal filetype=arm
autocmd BufNewFile,BufRead *.lds setlocal filetype=ld
autocmd BufNewFile,BufRead *.sig,*.cm setlocal filetype=sml
autocmd FileType text,markdown setlocal spell
autocmd FileType python,c,cpp,java,sml,tex,systemverilog,asm,markdown setlocal expandtab
autocmd FileType sml    setlocal shiftwidth=2 softtabstop=2 tabstop=2 textwidth=0
autocmd FileType systemverilog    setlocal shiftwidth=2 softtabstop=2 tabstop=2
autocmd FileType arm    setlocal shiftwidth=8 softtabstop=8 tabstop=8 noexpandtab
autocmd FileType c,cpp      setlocal syntax+=.doxygen
autocmd FileType c,cpp setlocal cindent cinoptions=g1,h2,N-s,E-s,i2s,+2s,(0,u0,U1,w1,W2s,ks

" FileType specific comments (both ends)
autocmd FileType sml   map <buffer> ,c :s/^\(.*\)$/\(\* \1 \*\)/<CR> <Esc>:nohlsearch<CR>
autocmd FileType html  map <buffer> ,c :s/^\(.*\)$/\/\* \1 \*\//<CR> <Esc>:nohlsearch<CR>
autocmd FileType sml,html map <buffer> ,C :s/^\([/(]\*\\|<!--\) \(.*\) \(\*[/)]\\|-->\)$/\2/<CR> <Esc>:nohlsearch<CR>

" FileType specific comments (one end)
autocmd FileType c,cpp,java,arm	  map <buffer> ,c :s/^/\/\//<CR> <Esc>:nohlsearch <CR>
autocmd FileType python,sh,make,conf map <buffer> ,c :s/^/#/<CR> <Esc>:nohlsearch <CR>
autocmd FileType vim map <buffer> ,c :s/^/\"/<CR> <Esc>:nohlsearch <CR>
autocmd FileType sql map <buffer> ,c :s/^/--/<CR> <Esc>:nohlsearch <CR>
autocmd FileType tex map <buffer> ,c :s/^/%/<CR> <Esc>:nohlsearch <CR>
autocmd FileType c,cpp,java,python,sh,make,conf,vim,sql,tex,arm map <buffer> ,C :s/^\/\/\\|^--\\|^> \\|^[#"%!;]//<CR> <Esc>:nohlsearch<CR>

"==============================================================================
" Utilities
"==============================================================================
" Strip whitespace from end of lines when writing file
autocmd BufWritePre * :%s/\s\+$//e

" Create directory when save
autocmd BufWritePre *
	\ if !isdirectory(expand("<afile>:h")) |
	\ call mkdir(expand("<afile>:h"), "p") |
	\ endif

" Cursor shape
let &t_SI = "\<esc>[5 q"
let &t_SR = "\<esc>[3 q"
let &t_EI = "\<esc>[2 q"

" Key mapping
:inoremap <S-Tab> <C-V><Tab>
